apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "marketstore.fullname" . }}
  labels:
    {{- include "marketstore.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ template "marketstore.fullname" . }}
  selector:
    matchLabels:
      {{- include "marketstore.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "marketstore.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "marketstore.serviceAccountName" . }}
      shareProcessNamespace: true
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: rpc
              containerPort: 5993
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /data
            name: mkts-data
          - mountPath: /etc/mkts.yml
            name: mkts-config
            subPath: "mkts.yml"
      {{ if .Values.backfill.enabled }}
        - name: ingest
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/polygon-backfill-cron.sh
          envFrom:
            - configMapRef:
                name: {{ template "marketstore.fullname" . }}-backfill
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE
          ports:
            - name: http
              containerPort: 18080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 18080
          readinessProbe:
            httpGet:
              path: /
              port: 18080
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /data
              name: mkts-data
            - mountPath: /etc/mkts.yml
              name: mkts-config
              subPath: "mkts.yml"
      {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: mkts-config
        configMap:
          name: {{ template "marketstore.fullname" . }}
{{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
      - name: data
        persistentVolumeClaim:
{{- with .Values.persistence.existingClaim }}
            claimName: {{ tpl . $ }}
{{- end }}
{{- else if not .Values.persistence.enabled }}
      - name: data
        emptyDir: {}
{{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: mkts-data
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        storageClassName: {{ .Values.persistence.storageClassName | quote }}
{{- end }}
