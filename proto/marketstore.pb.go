// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: marketstore.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DataType int32

const (
	//
	//NOTE: The ordering of this enum must match the File Format order
	//
	//We define our own types here instead of using the (excellent!) built-in Go type system for the primary reason
	//that we are serializing data to files and so need to have a (very!) stable on-disk representation that matches
	//the processing we do internally.
	DataType_UNKNOWN DataType = 0
	DataType_FLOAT32 DataType = 1
	DataType_INT32   DataType = 2
	DataType_FLOAT64 DataType = 3
	DataType_INT64   DataType = 4
	DataType_EPOCH   DataType = 5
	DataType_BYTE    DataType = 6
	DataType_BOOL    DataType = 7
	DataType_NONE    DataType = 8
	DataType_STRING  DataType = 9
	DataType_INT16   DataType = 10
	DataType_UINT8   DataType = 11
	DataType_UINT16  DataType = 12
	DataType_UINT32  DataType = 13
	DataType_UINT64  DataType = 14
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "FLOAT32",
		2:  "INT32",
		3:  "FLOAT64",
		4:  "INT64",
		5:  "EPOCH",
		6:  "BYTE",
		7:  "BOOL",
		8:  "NONE",
		9:  "STRING",
		10: "INT16",
		11: "UINT8",
		12: "UINT16",
		13: "UINT32",
		14: "UINT64",
	}
	DataType_value = map[string]int32{
		"UNKNOWN": 0,
		"FLOAT32": 1,
		"INT32":   2,
		"FLOAT64": 3,
		"INT64":   4,
		"EPOCH":   5,
		"BYTE":    6,
		"BOOL":    7,
		"NONE":    8,
		"STRING":  9,
		"INT16":   10,
		"UINT8":   11,
		"UINT16":  12,
		"UINT32":  13,
		"UINT64":  14,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_marketstore_proto_enumTypes[0].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_marketstore_proto_enumTypes[0]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{0}
}

type ListSymbolsRequest_Format int32

const (
	// symbol names (e.g. ["AAPL", "AMZN", ....])
	ListSymbolsRequest_SYMBOL ListSymbolsRequest_Format = 0
	// {symbol/timeframe/attributeGroup} names (e.g. ["AAPL/1Min/TICK", "AAPL/1Sec/OHLCV", "Amazon/1D/Tick",...])
	ListSymbolsRequest_TIME_BUCKET_KEY ListSymbolsRequest_Format = 1
)

// Enum value maps for ListSymbolsRequest_Format.
var (
	ListSymbolsRequest_Format_name = map[int32]string{
		0: "SYMBOL",
		1: "TIME_BUCKET_KEY",
	}
	ListSymbolsRequest_Format_value = map[string]int32{
		"SYMBOL":          0,
		"TIME_BUCKET_KEY": 1,
	}
)

func (x ListSymbolsRequest_Format) Enum() *ListSymbolsRequest_Format {
	p := new(ListSymbolsRequest_Format)
	*p = x
	return p
}

func (x ListSymbolsRequest_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListSymbolsRequest_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_marketstore_proto_enumTypes[1].Descriptor()
}

func (ListSymbolsRequest_Format) Type() protoreflect.EnumType {
	return &file_marketstore_proto_enumTypes[1]
}

func (x ListSymbolsRequest_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListSymbolsRequest_Format.Descriptor instead.
func (ListSymbolsRequest_Format) EnumDescriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{15, 0}
}

type DataShape struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type DataType `protobuf:"varint,2,opt,name=type,proto3,enum=proto.DataType" json:"type,omitempty"`
}

func (x *DataShape) Reset() {
	*x = DataShape{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataShape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataShape) ProtoMessage() {}

func (x *DataShape) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataShape.ProtoReflect.Descriptor instead.
func (*DataShape) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{0}
}

func (x *DataShape) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataShape) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_UNKNOWN
}

type NumpyMultiDataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       *NumpyDataset    `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	StartIndex map[string]int32 `protobuf:"bytes,2,rep,name=start_index,json=startIndex,proto3" json:"start_index,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Lengths    map[string]int32 `protobuf:"bytes,3,rep,name=lengths,proto3" json:"lengths,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *NumpyMultiDataset) Reset() {
	*x = NumpyMultiDataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumpyMultiDataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumpyMultiDataset) ProtoMessage() {}

func (x *NumpyMultiDataset) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumpyMultiDataset.ProtoReflect.Descriptor instead.
func (*NumpyMultiDataset) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{1}
}

func (x *NumpyMultiDataset) GetData() *NumpyDataset {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *NumpyMultiDataset) GetStartIndex() map[string]int32 {
	if x != nil {
		return x.StartIndex
	}
	return nil
}

func (x *NumpyMultiDataset) GetLengths() map[string]int32 {
	if x != nil {
		return x.Lengths
	}
	return nil
}

type NumpyDataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a list of type strings such as i4 and f8
	ColumnTypes []string `protobuf:"bytes,1,rep,name=column_types,json=columnTypes,proto3" json:"column_types,omitempty"`
	// a list of column names
	ColumnNames []string `protobuf:"bytes,2,rep,name=column_names,json=columnNames,proto3" json:"column_names,omitempty"`
	// two dimensional byte arrays holding the column data
	ColumnData [][]byte `protobuf:"bytes,3,rep,name=column_data,json=columnData,proto3" json:"column_data,omitempty"`
	Length     int32    `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`
	// hidden
	DataShapes []*DataShape `protobuf:"bytes,5,rep,name=data_shapes,json=dataShapes,proto3" json:"data_shapes,omitempty"`
}

func (x *NumpyDataset) Reset() {
	*x = NumpyDataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumpyDataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumpyDataset) ProtoMessage() {}

func (x *NumpyDataset) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumpyDataset.ProtoReflect.Descriptor instead.
func (*NumpyDataset) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{2}
}

func (x *NumpyDataset) GetColumnTypes() []string {
	if x != nil {
		return x.ColumnTypes
	}
	return nil
}

func (x *NumpyDataset) GetColumnNames() []string {
	if x != nil {
		return x.ColumnNames
	}
	return nil
}

func (x *NumpyDataset) GetColumnData() [][]byte {
	if x != nil {
		return x.ColumnData
	}
	return nil
}

func (x *NumpyDataset) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *NumpyDataset) GetDataShapes() []*DataShape {
	if x != nil {
		return x.DataShapes
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	DataShapes []*DataShape `protobuf:"bytes,2,rep,name=data_shapes,json=dataShapes,proto3" json:"data_shapes,omitempty"`
	RowType    string       `protobuf:"bytes,3,opt,name=row_type,json=rowType,proto3" json:"row_type,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CreateRequest) GetDataShapes() []*DataShape {
	if x != nil {
		return x.DataShapes
	}
	return nil
}

func (x *CreateRequest) GetRowType() string {
	if x != nil {
		return x.RowType
	}
	return ""
}

type MultiCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CreateRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *MultiCreateRequest) Reset() {
	*x = MultiCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiCreateRequest) ProtoMessage() {}

func (x *MultiCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiCreateRequest.ProtoReflect.Descriptor instead.
func (*MultiCreateRequest) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{4}
}

func (x *MultiCreateRequest) GetRequests() []*CreateRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type MultiQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	//A multi-request allows for different Timeframes and record formats for each request
	Requests []*QueryRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *MultiQueryRequest) Reset() {
	*x = MultiQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiQueryRequest) ProtoMessage() {}

func (x *MultiQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiQueryRequest.ProtoReflect.Descriptor instead.
func (*MultiQueryRequest) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{5}
}

func (x *MultiQueryRequest) GetRequests() []*QueryRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Note: SQL is not fully supported
	IsSqlStatement bool   `protobuf:"varint,1,opt,name=is_sql_statement,json=isSqlStatement,proto3" json:"is_sql_statement,omitempty"` // If this is a SQL request, Only SQLStatement is relevant
	SqlStatement   string `protobuf:"bytes,2,opt,name=sql_statement,json=sqlStatement,proto3" json:"sql_statement,omitempty"`
	// Destination is <symbol>/<timeframe>/<attributegroup>
	Destination string `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	// This is not usually set, defaults to Symbol/Timeframe/AttributeGroup
	KeyCategory string `protobuf:"bytes,4,opt,name=key_category,json=keyCategory,proto3" json:"key_category,omitempty"`
	// Lower time predicate (i.e. index >= start) in unix epoch second
	EpochStart int64 `protobuf:"varint,5,opt,name=epoch_start,json=epochStart,proto3" json:"epoch_start,omitempty"`
	// fractional part (nano second) of epoch_start
	EpochStartNanos int64 `protobuf:"varint,6,opt,name=epoch_start_nanos,json=epochStartNanos,proto3" json:"epoch_start_nanos,omitempty"`
	// Upper time predicate (i.e. index <= end) in unix epoch second
	EpochEnd int64 `protobuf:"varint,7,opt,name=epoch_end,json=epochEnd,proto3" json:"epoch_end,omitempty"`
	// fractional part (nano second) of epoch_end
	EpochEndNanos int64 `protobuf:"varint,8,opt,name=epoch_end_nanos,json=epochEndNanos,proto3" json:"epoch_end_nanos,omitempty"`
	// Number of max returned rows from lower/upper bound
	LimitRecordCount int32 `protobuf:"varint,9,opt,name=limit_record_count,json=limitRecordCount,proto3" json:"limit_record_count,omitempty"`
	// Set to true if LimitRecordCount should be from the lower
	LimitFromStart bool `protobuf:"varint,10,opt,name=limit_from_start,json=limitFromStart,proto3" json:"limit_from_start,omitempty"`
	// Array of column names to be returned
	Columns []string `protobuf:"bytes,11,rep,name=columns,proto3" json:"columns,omitempty"`
	// Support for functions is experimental and subject to change
	Functions []string `protobuf:"bytes,12,rep,name=functions,proto3" json:"functions,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{6}
}

func (x *QueryRequest) GetIsSqlStatement() bool {
	if x != nil {
		return x.IsSqlStatement
	}
	return false
}

func (x *QueryRequest) GetSqlStatement() string {
	if x != nil {
		return x.SqlStatement
	}
	return ""
}

func (x *QueryRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *QueryRequest) GetKeyCategory() string {
	if x != nil {
		return x.KeyCategory
	}
	return ""
}

func (x *QueryRequest) GetEpochStart() int64 {
	if x != nil {
		return x.EpochStart
	}
	return 0
}

func (x *QueryRequest) GetEpochStartNanos() int64 {
	if x != nil {
		return x.EpochStartNanos
	}
	return 0
}

func (x *QueryRequest) GetEpochEnd() int64 {
	if x != nil {
		return x.EpochEnd
	}
	return 0
}

func (x *QueryRequest) GetEpochEndNanos() int64 {
	if x != nil {
		return x.EpochEndNanos
	}
	return 0
}

func (x *QueryRequest) GetLimitRecordCount() int32 {
	if x != nil {
		return x.LimitRecordCount
	}
	return 0
}

func (x *QueryRequest) GetLimitFromStart() bool {
	if x != nil {
		return x.LimitFromStart
	}
	return false
}

func (x *QueryRequest) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *QueryRequest) GetFunctions() []string {
	if x != nil {
		return x.Functions
	}
	return nil
}

type MultiQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*QueryResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	Version   string           `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // Server Version
	Timezone  string           `protobuf:"bytes,3,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *MultiQueryResponse) Reset() {
	*x = MultiQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiQueryResponse) ProtoMessage() {}

func (x *MultiQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiQueryResponse.ProtoReflect.Descriptor instead.
func (*MultiQueryResponse) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{7}
}

func (x *MultiQueryResponse) GetResponses() []*QueryResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *MultiQueryResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MultiQueryResponse) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *NumpyMultiDataset `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{8}
}

func (x *QueryResponse) GetResult() *NumpyMultiDataset {
	if x != nil {
		return x.Result
	}
	return nil
}

type MultiWriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	//A multi-request allows for different Timeframes and record formats for each request
	Requests []*WriteRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *MultiWriteRequest) Reset() {
	*x = MultiWriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiWriteRequest) ProtoMessage() {}

func (x *MultiWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiWriteRequest.ProtoReflect.Descriptor instead.
func (*MultiWriteRequest) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{9}
}

func (x *MultiWriteRequest) GetRequests() []*WriteRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type WriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data             *NumpyMultiDataset `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	IsVariableLength bool               `protobuf:"varint,2,opt,name=is_variable_length,json=isVariableLength,proto3" json:"is_variable_length,omitempty"`
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{10}
}

func (x *WriteRequest) GetData() *NumpyMultiDataset {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WriteRequest) GetIsVariableLength() bool {
	if x != nil {
		return x.IsVariableLength
	}
	return false
}

type MultiServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*ServerResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *MultiServerResponse) Reset() {
	*x = MultiServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiServerResponse) ProtoMessage() {}

func (x *MultiServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiServerResponse.ProtoReflect.Descriptor instead.
func (*MultiServerResponse) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{11}
}

func (x *MultiServerResponse) GetResponses() []*ServerResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type ServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error   string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"` // Server Version
}

func (x *ServerResponse) Reset() {
	*x = ServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerResponse) ProtoMessage() {}

func (x *ServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerResponse.ProtoReflect.Descriptor instead.
func (*ServerResponse) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{12}
}

func (x *ServerResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ServerResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type MultiKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*KeyRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *MultiKeyRequest) Reset() {
	*x = MultiKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiKeyRequest) ProtoMessage() {}

func (x *MultiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiKeyRequest.ProtoReflect.Descriptor instead.
func (*MultiKeyRequest) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{13}
}

func (x *MultiKeyRequest) GetRequests() []*KeyRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type KeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *KeyRequest) Reset() {
	*x = KeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRequest) ProtoMessage() {}

func (x *KeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRequest.ProtoReflect.Descriptor instead.
func (*KeyRequest) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{14}
}

func (x *KeyRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ListSymbolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format ListSymbolsRequest_Format `protobuf:"varint,1,opt,name=format,proto3,enum=proto.ListSymbolsRequest_Format" json:"format,omitempty"`
}

func (x *ListSymbolsRequest) Reset() {
	*x = ListSymbolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSymbolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSymbolsRequest) ProtoMessage() {}

func (x *ListSymbolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSymbolsRequest.ProtoReflect.Descriptor instead.
func (*ListSymbolsRequest) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{15}
}

func (x *ListSymbolsRequest) GetFormat() ListSymbolsRequest_Format {
	if x != nil {
		return x.Format
	}
	return ListSymbolsRequest_SYMBOL
}

type ListSymbolsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []string `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ListSymbolsResponse) Reset() {
	*x = ListSymbolsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSymbolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSymbolsResponse) ProtoMessage() {}

func (x *ListSymbolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSymbolsResponse.ProtoReflect.Descriptor instead.
func (*ListSymbolsResponse) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{16}
}

func (x *ListSymbolsResponse) GetResults() []string {
	if x != nil {
		return x.Results
	}
	return nil
}

type ServerVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerVersionRequest) Reset() {
	*x = ServerVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerVersionRequest) ProtoMessage() {}

func (x *ServerVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerVersionRequest.ProtoReflect.Descriptor instead.
func (*ServerVersionRequest) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{17}
}

type ServerVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ServerVersionResponse) Reset() {
	*x = ServerVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_marketstore_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerVersionResponse) ProtoMessage() {}

func (x *ServerVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_marketstore_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerVersionResponse.ProtoReflect.Descriptor instead.
func (*ServerVersionResponse) Descriptor() ([]byte, []int) {
	return file_marketstore_proto_rawDescGZIP(), []int{18}
}

func (x *ServerVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_marketstore_proto protoreflect.FileDescriptor

var file_marketstore_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x68, 0x61, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0xc3, 0x02, 0x0a, 0x11, 0x4e, 0x75, 0x6d, 0x70, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6d,
	0x70, 0x79, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x49, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6d,
	0x70, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3f, 0x0a, 0x07, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6d, 0x70, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x2e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc0, 0x01, 0x0a, 0x0c, 0x4e, 0x75, 0x6d, 0x70, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x68, 0x61, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x70, 0x65, 0x52, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x22, 0x6f, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x0b,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x68, 0x61, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x6f, 0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x22, 0x46, 0x0a, 0x12, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x22, 0x44, 0x0a, 0x11, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0xc4, 0x03, 0x0a, 0x0c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f,
	0x73, 0x71, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x71, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x71, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x65,
	0x79, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6b, 0x65, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x61,
	0x6e, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x45, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x45, 0x6e, 0x64, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x46, 0x72,
	0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x7e, 0x0a, 0x12, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22,
	0x41, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x75, 0x6d, 0x70, 0x79, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x44, 0x0a, 0x11, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x6a, 0x0a, 0x0c, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x75, 0x6d, 0x70, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x22, 0x4a, 0x0a, 0x13, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x22, 0x40, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x22, 0x1e, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x79, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x22, 0x29, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x49,
	0x4d, 0x45, 0x5f, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x01, 0x22,
	0x2f, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x15, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2a, 0xb6, 0x01, 0x0a, 0x08,
	0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x33, 0x32,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x36, 0x34, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e,
	0x54, 0x36, 0x34, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x50, 0x4f, 0x43, 0x48, 0x10, 0x05,
	0x12, 0x08, 0x0a, 0x04, 0x42, 0x59, 0x54, 0x45, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f,
	0x4f, 0x4c, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x08, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e,
	0x54, 0x31, 0x36, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x49, 0x4e, 0x54, 0x38, 0x10, 0x0b,
	0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x0c, 0x12, 0x0a, 0x0a, 0x06,
	0x55, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x0d, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x49, 0x4e, 0x54,
	0x36, 0x34, 0x10, 0x0e, 0x32, 0x9c, 0x03, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73,
	0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_marketstore_proto_rawDescOnce sync.Once
	file_marketstore_proto_rawDescData = file_marketstore_proto_rawDesc
)

func file_marketstore_proto_rawDescGZIP() []byte {
	file_marketstore_proto_rawDescOnce.Do(func() {
		file_marketstore_proto_rawDescData = protoimpl.X.CompressGZIP(file_marketstore_proto_rawDescData)
	})
	return file_marketstore_proto_rawDescData
}

var file_marketstore_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_marketstore_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_marketstore_proto_goTypes = []interface{}{
	(DataType)(0),                  // 0: proto.DataType
	(ListSymbolsRequest_Format)(0), // 1: proto.ListSymbolsRequest.Format
	(*DataShape)(nil),              // 2: proto.DataShape
	(*NumpyMultiDataset)(nil),      // 3: proto.NumpyMultiDataset
	(*NumpyDataset)(nil),           // 4: proto.NumpyDataset
	(*CreateRequest)(nil),          // 5: proto.CreateRequest
	(*MultiCreateRequest)(nil),     // 6: proto.MultiCreateRequest
	(*MultiQueryRequest)(nil),      // 7: proto.MultiQueryRequest
	(*QueryRequest)(nil),           // 8: proto.QueryRequest
	(*MultiQueryResponse)(nil),     // 9: proto.MultiQueryResponse
	(*QueryResponse)(nil),          // 10: proto.QueryResponse
	(*MultiWriteRequest)(nil),      // 11: proto.MultiWriteRequest
	(*WriteRequest)(nil),           // 12: proto.WriteRequest
	(*MultiServerResponse)(nil),    // 13: proto.MultiServerResponse
	(*ServerResponse)(nil),         // 14: proto.ServerResponse
	(*MultiKeyRequest)(nil),        // 15: proto.MultiKeyRequest
	(*KeyRequest)(nil),             // 16: proto.KeyRequest
	(*ListSymbolsRequest)(nil),     // 17: proto.ListSymbolsRequest
	(*ListSymbolsResponse)(nil),    // 18: proto.ListSymbolsResponse
	(*ServerVersionRequest)(nil),   // 19: proto.ServerVersionRequest
	(*ServerVersionResponse)(nil),  // 20: proto.ServerVersionResponse
	nil,                            // 21: proto.NumpyMultiDataset.StartIndexEntry
	nil,                            // 22: proto.NumpyMultiDataset.LengthsEntry
}
var file_marketstore_proto_depIdxs = []int32{
	0,  // 0: proto.DataShape.type:type_name -> proto.DataType
	4,  // 1: proto.NumpyMultiDataset.data:type_name -> proto.NumpyDataset
	21, // 2: proto.NumpyMultiDataset.start_index:type_name -> proto.NumpyMultiDataset.StartIndexEntry
	22, // 3: proto.NumpyMultiDataset.lengths:type_name -> proto.NumpyMultiDataset.LengthsEntry
	2,  // 4: proto.NumpyDataset.data_shapes:type_name -> proto.DataShape
	2,  // 5: proto.CreateRequest.data_shapes:type_name -> proto.DataShape
	5,  // 6: proto.MultiCreateRequest.requests:type_name -> proto.CreateRequest
	8,  // 7: proto.MultiQueryRequest.requests:type_name -> proto.QueryRequest
	10, // 8: proto.MultiQueryResponse.responses:type_name -> proto.QueryResponse
	3,  // 9: proto.QueryResponse.result:type_name -> proto.NumpyMultiDataset
	12, // 10: proto.MultiWriteRequest.requests:type_name -> proto.WriteRequest
	3,  // 11: proto.WriteRequest.data:type_name -> proto.NumpyMultiDataset
	14, // 12: proto.MultiServerResponse.responses:type_name -> proto.ServerResponse
	16, // 13: proto.MultiKeyRequest.requests:type_name -> proto.KeyRequest
	1,  // 14: proto.ListSymbolsRequest.format:type_name -> proto.ListSymbolsRequest.Format
	7,  // 15: proto.Marketstore.Query:input_type -> proto.MultiQueryRequest
	11, // 16: proto.Marketstore.Write:input_type -> proto.MultiWriteRequest
	6,  // 17: proto.Marketstore.Create:input_type -> proto.MultiCreateRequest
	15, // 18: proto.Marketstore.Destroy:input_type -> proto.MultiKeyRequest
	17, // 19: proto.Marketstore.ListSymbols:input_type -> proto.ListSymbolsRequest
	19, // 20: proto.Marketstore.ServerVersion:input_type -> proto.ServerVersionRequest
	9,  // 21: proto.Marketstore.Query:output_type -> proto.MultiQueryResponse
	13, // 22: proto.Marketstore.Write:output_type -> proto.MultiServerResponse
	13, // 23: proto.Marketstore.Create:output_type -> proto.MultiServerResponse
	13, // 24: proto.Marketstore.Destroy:output_type -> proto.MultiServerResponse
	18, // 25: proto.Marketstore.ListSymbols:output_type -> proto.ListSymbolsResponse
	20, // 26: proto.Marketstore.ServerVersion:output_type -> proto.ServerVersionResponse
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_marketstore_proto_init() }
func file_marketstore_proto_init() {
	if File_marketstore_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_marketstore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataShape); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumpyMultiDataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumpyDataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiWriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSymbolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSymbolsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_marketstore_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_marketstore_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_marketstore_proto_goTypes,
		DependencyIndexes: file_marketstore_proto_depIdxs,
		EnumInfos:         file_marketstore_proto_enumTypes,
		MessageInfos:      file_marketstore_proto_msgTypes,
	}.Build()
	File_marketstore_proto = out.File
	file_marketstore_proto_rawDesc = nil
	file_marketstore_proto_goTypes = nil
	file_marketstore_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MarketstoreClient is the client API for Marketstore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MarketstoreClient interface {
	Query(ctx context.Context, in *MultiQueryRequest, opts ...grpc.CallOption) (*MultiQueryResponse, error)
	Write(ctx context.Context, in *MultiWriteRequest, opts ...grpc.CallOption) (*MultiServerResponse, error)
	Create(ctx context.Context, in *MultiCreateRequest, opts ...grpc.CallOption) (*MultiServerResponse, error)
	Destroy(ctx context.Context, in *MultiKeyRequest, opts ...grpc.CallOption) (*MultiServerResponse, error)
	ListSymbols(ctx context.Context, in *ListSymbolsRequest, opts ...grpc.CallOption) (*ListSymbolsResponse, error)
	ServerVersion(ctx context.Context, in *ServerVersionRequest, opts ...grpc.CallOption) (*ServerVersionResponse, error)
}

type marketstoreClient struct {
	cc grpc.ClientConnInterface
}

func NewMarketstoreClient(cc grpc.ClientConnInterface) MarketstoreClient {
	return &marketstoreClient{cc}
}

func (c *marketstoreClient) Query(ctx context.Context, in *MultiQueryRequest, opts ...grpc.CallOption) (*MultiQueryResponse, error) {
	out := new(MultiQueryResponse)
	err := c.cc.Invoke(ctx, "/proto.Marketstore/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketstoreClient) Write(ctx context.Context, in *MultiWriteRequest, opts ...grpc.CallOption) (*MultiServerResponse, error) {
	out := new(MultiServerResponse)
	err := c.cc.Invoke(ctx, "/proto.Marketstore/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketstoreClient) Create(ctx context.Context, in *MultiCreateRequest, opts ...grpc.CallOption) (*MultiServerResponse, error) {
	out := new(MultiServerResponse)
	err := c.cc.Invoke(ctx, "/proto.Marketstore/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketstoreClient) Destroy(ctx context.Context, in *MultiKeyRequest, opts ...grpc.CallOption) (*MultiServerResponse, error) {
	out := new(MultiServerResponse)
	err := c.cc.Invoke(ctx, "/proto.Marketstore/Destroy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketstoreClient) ListSymbols(ctx context.Context, in *ListSymbolsRequest, opts ...grpc.CallOption) (*ListSymbolsResponse, error) {
	out := new(ListSymbolsResponse)
	err := c.cc.Invoke(ctx, "/proto.Marketstore/ListSymbols", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketstoreClient) ServerVersion(ctx context.Context, in *ServerVersionRequest, opts ...grpc.CallOption) (*ServerVersionResponse, error) {
	out := new(ServerVersionResponse)
	err := c.cc.Invoke(ctx, "/proto.Marketstore/ServerVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MarketstoreServer is the server API for Marketstore service.
type MarketstoreServer interface {
	Query(context.Context, *MultiQueryRequest) (*MultiQueryResponse, error)
	Write(context.Context, *MultiWriteRequest) (*MultiServerResponse, error)
	Create(context.Context, *MultiCreateRequest) (*MultiServerResponse, error)
	Destroy(context.Context, *MultiKeyRequest) (*MultiServerResponse, error)
	ListSymbols(context.Context, *ListSymbolsRequest) (*ListSymbolsResponse, error)
	ServerVersion(context.Context, *ServerVersionRequest) (*ServerVersionResponse, error)
}

// UnimplementedMarketstoreServer can be embedded to have forward compatible implementations.
type UnimplementedMarketstoreServer struct {
}

func (*UnimplementedMarketstoreServer) Query(context.Context, *MultiQueryRequest) (*MultiQueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}
func (*UnimplementedMarketstoreServer) Write(context.Context, *MultiWriteRequest) (*MultiServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Write not implemented")
}
func (*UnimplementedMarketstoreServer) Create(context.Context, *MultiCreateRequest) (*MultiServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedMarketstoreServer) Destroy(context.Context, *MultiKeyRequest) (*MultiServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Destroy not implemented")
}
func (*UnimplementedMarketstoreServer) ListSymbols(context.Context, *ListSymbolsRequest) (*ListSymbolsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSymbols not implemented")
}
func (*UnimplementedMarketstoreServer) ServerVersion(context.Context, *ServerVersionRequest) (*ServerVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServerVersion not implemented")
}

func RegisterMarketstoreServer(s *grpc.Server, srv MarketstoreServer) {
	s.RegisterService(&_Marketstore_serviceDesc, srv)
}

func _Marketstore_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketstoreServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Marketstore/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketstoreServer).Query(ctx, req.(*MultiQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Marketstore_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiWriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketstoreServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Marketstore/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketstoreServer).Write(ctx, req.(*MultiWriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Marketstore_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketstoreServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Marketstore/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketstoreServer).Create(ctx, req.(*MultiCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Marketstore_Destroy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketstoreServer).Destroy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Marketstore/Destroy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketstoreServer).Destroy(ctx, req.(*MultiKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Marketstore_ListSymbols_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSymbolsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketstoreServer).ListSymbols(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Marketstore/ListSymbols",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketstoreServer).ListSymbols(ctx, req.(*ListSymbolsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Marketstore_ServerVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketstoreServer).ServerVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Marketstore/ServerVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketstoreServer).ServerVersion(ctx, req.(*ServerVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Marketstore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Marketstore",
	HandlerType: (*MarketstoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Query",
			Handler:    _Marketstore_Query_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _Marketstore_Write_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Marketstore_Create_Handler,
		},
		{
			MethodName: "Destroy",
			Handler:    _Marketstore_Destroy_Handler,
		},
		{
			MethodName: "ListSymbols",
			Handler:    _Marketstore_ListSymbols_Handler,
		},
		{
			MethodName: "ServerVersion",
			Handler:    _Marketstore_ServerVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "marketstore.proto",
}
